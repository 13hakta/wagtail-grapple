# Generated by Django 2.2.10 on 2020-02-28 14:00

from django.db import migrations
import home.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0014_story'),
    ]

    operations = [
        migrations.AddField(
            model_name='story',
            name='body',
            field=wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'])), ('quote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'])), ('attribution', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'], required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(help_text="Recommended image size 1400x787-2000x1125px (16:9), smaller images won't have as much of an impact and portrait images will be manipulated.", required=False))])), ('results_text_number', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Results - Text and Number')), ('text_and_number_results', wagtail.core.blocks.StreamBlock([('text_and_number_result', wagtail.core.blocks.StructBlock([('icon', wagtail.core.blocks.ChoiceBlock(choices=[('certificate', 'Certificate'), ('pitch', 'Pitch'), ('timer', 'Timer')], required=False)), ('number', wagtail.core.blocks.DecimalBlock()), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline']))]))]))])), ('results_chart', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Results - Chart')), ('chart_results', wagtail.core.blocks.StreamBlock([('chart_result', wagtail.core.blocks.StructBlock([('percentage', wagtail.core.blocks.IntegerBlock()), ('text', wagtail.core.blocks.CharBlock())]))]))])), ('results_comparison_chart', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Results - Comparison Chart')), ('comparison_chart_results', wagtail.core.blocks.StreamBlock([('comparison_chart_result', wagtail.core.blocks.StructBlock([('number1', wagtail.core.blocks.IntegerBlock()), ('text1', wagtail.core.blocks.CharBlock()), ('number2', wagtail.core.blocks.IntegerBlock()), ('text2', wagtail.core.blocks.CharBlock()), ('show_as_percentage', wagtail.core.blocks.BooleanBlock(default=True, help='This will calculate the percentage from the given numbers assuming number1 + number2 = 100%'))]))]))])), ('timeline', wagtail.core.blocks.StreamBlock([('entry', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text="Recommended image size 1400x787-2000x1125px (16:9), smaller images won't have as much of an impact and portrait images will be manipulated.")), ('title', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline']))]))])), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text="Recommended image size 1400x787-2000x1125px (16:9), smaller images won't have as much of an impact and portrait images will be manipulated.")), ('caption', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'], required=False))])), ('story_scroller', wagtail.core.blocks.StructBlock([('slides', wagtail.core.blocks.StreamBlock([('intro', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'])), ('background', wagtail.images.blocks.ImageChooserBlock(help_text="Recommended image size 743x787-1063x1125px (17:18), smaller images won't have as much of an impact and portrait images will be manipulated.", required=True))])), ('quote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'])), ('attribution', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'], required=False)), ('background', wagtail.images.blocks.ImageChooserBlock(help_text="Recommended image size 743x787-1063x1125px (17:18), smaller images won't have as much of an impact and portrait images will be manipulated.", required=False))])), ('statistic', wagtail.core.blocks.StructBlock([('statistic', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'], help_text='Describe the given statistic')), ('background', wagtail.images.blocks.ImageChooserBlock(help_text="Recommended image size 743x787-1063x1125px (17:18), smaller images won't have as much of an impact and portrait images will be manipulated.", required=False))]))])), ('extra_images', wagtail.core.blocks.StreamBlock([('images', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text="Recommended image size 1400x787-2000x1125px (16:9), smaller images won't have as much of an impact and portrait images will be manipulated.")), ('caption', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'underline'], required=False))]))], required=False))])), ('video', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('youtube_link', wagtail.embeds.blocks.EmbedBlock(required=False)), ('video_upload', home.models.VideoChooserBlock(required=False))]))], default=None),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='blogpage',
            name='body',
            field=wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('decimal', wagtail.core.blocks.DecimalBlock()), ('date', wagtail.core.blocks.DateBlock()), ('datetime', wagtail.core.blocks.DateTimeBlock()), ('gallery', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('images', wagtail.core.blocks.StreamBlock([('image', wagtail.core.blocks.StructBlock([('caption', wagtail.core.blocks.CharBlock(classname='full title')), ('image', wagtail.images.blocks.ImageChooserBlock())]))]))]))]),
        ),
    ]
